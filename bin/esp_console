#!/usr/bin/env ruby
# https://www.fedux.org/articles/2015/08/26/creating-an-irb-based-repl-console-for-your-project.html

ENV['ESP_ENV'] = ARGV[0]
require 'irb'
require_relative '../lib/esp_sdk'

module ESP
  class Console
    def start
      ARGV.clear
      IRB.setup nil

      IRB.conf[:PROMPT] = {}
      IRB.conf[:IRB_NAME] = 'espsdk'
      IRB.conf[:PROMPT][:ESPSDK] = {
        :PROMPT_I => '%N:%03n:%i> ',
        :PROMPT_N => '%N:%03n:%i> ',
        :PROMPT_S => '%N:%03n:%i%l ',
        :PROMPT_C => '%N:%03n:%i* ',
        :RETURN => "# => %s\n"
      }
      IRB.conf[:PROMPT_MODE] = :ESPSDK

      IRB.conf[:RC] = false

      require 'irb/completion'
      require 'irb/ext/save-history'
      IRB.conf[:READLINE] = true
      IRB.conf[:SAVE_HISTORY] = 1000
      IRB.conf[:HISTORY_FILE] = '~/.esp_sdk_history'

      context = Class.new do
        include ESP
      end

      irb = IRB::Irb.new(IRB::WorkSpace.new(context.new))
      IRB.conf[:MAIN_CONTEXT] = irb.context

      trap("SIGINT") do
        irb.signal_handle
      end

      begin
        catch(:IRB_EXIT) do
          irb.eval_input
        end
      ensure
        IRB.irb_at_exit
      end
    end
  end
end

begin
  puts File.read(File.expand_path(File.dirname(__FILE__) + '/../assets/esp_logo.ans'))
rescue
  #swallow the error
end
print <<-banner

Evident Security Platform Console #{ESP::VERSION}
Copyright (c) 2013-#{Time.now.year} Evident Security, All Rights Reserved.
http://www.evident.io
banner
ESP::Console.new.start

